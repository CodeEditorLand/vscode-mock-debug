{
	"activationEvents": [
		"onDebugResolve:mock",
		"onDebugDynamicConfigurations:mock",
		"onCommand:extension.mock-debug.getProgramName"
	],
	"browser": "./dist/web-extension.js",
	"contributes": {
		"breakpoints": [
			{
				"language": "markdown"
			}
		],
		"commands": [
			{
				"category": "Mock Debug",
				"command": "extension.mock-debug.debugEditorContents",
				"enablement": "!inDebugMode",
				"icon": "$(debug-alt)",
				"title": "Debug File"
			},
			{
				"category": "Mock Debug",
				"command": "extension.mock-debug.runEditorContents",
				"enablement": "!inDebugMode",
				"icon": "$(play)",
				"title": "Run File"
			},
			{
				"command": "extension.mock-debug.toggleFormatting",
				"title": "Toggle between decimal and hex formatting"
			}
		],
		"debuggers": [
			{
				"configurationAttributes": {
					"attach": {
						"properties": {
							"compileError": {
								"description": "Simulates a compile error in 'attach' request.",
								"enum": [
									"default",
									"show",
									"hide"
								],
								"enumDescriptions": [
									"default: show fake compile error to user",
									"show fake compile error to user",
									"do not show fake compile error to user"
								],
								"type": "string"
							},
							"program": {
								"default": "${workspaceFolder}/${command:AskForProgramName}",
								"description": "Absolute path to a text file.",
								"type": "string"
							},
							"stopOnEntry": {
								"default": true,
								"description": "Automatically stop after attach.",
								"type": "boolean"
							},
							"trace": {
								"default": true,
								"description": "Enable logging of the Debug Adapter Protocol.",
								"type": "boolean"
							}
						},
						"required": [
							"program"
						]
					},
					"launch": {
						"properties": {
							"compileError": {
								"description": "Simulates a compile error in 'launch' request.",
								"enum": [
									"default",
									"show",
									"hide"
								],
								"enumDescriptions": [
									"default: show fake compile error to user",
									"show fake compile error to user",
									"do not show fake compile error to user"
								],
								"type": "string"
							},
							"program": {
								"default": "${workspaceFolder}/${command:AskForProgramName}",
								"description": "Absolute path to a text file.",
								"type": "string"
							},
							"stopOnEntry": {
								"default": true,
								"description": "Automatically stop after launch.",
								"type": "boolean"
							},
							"trace": {
								"default": true,
								"description": "Enable logging of the Debug Adapter Protocol.",
								"type": "boolean"
							}
						},
						"required": [
							"program"
						]
					}
				},
				"configurationSnippets": [
					{
						"body": {
							"name": "Ask for file name",
							"program": "^\"\\${workspaceFolder}/\\${command:AskForProgramName}\"",
							"request": "launch",
							"stopOnEntry": true,
							"type": "mock"
						},
						"description": "A new configuration for 'debugging' a user selected markdown file.",
						"label": "Mock Debug: Launch"
					}
				],
				"initialConfigurations": [
					{
						"name": "Ask for file name",
						"program": "${workspaceFolder}/${command:AskForProgramName}",
						"request": "launch",
						"stopOnEntry": true,
						"type": "mock"
					}
				],
				"label": "Mock Debug",
				"languages": [
					"markdown"
				],
				"program": "./out/debugAdapter.js",
				"runtime": "node",
				"type": "mock",
				"variables": {
					"AskForProgramName": "extension.mock-debug.getProgramName"
				}
			}
		],
		"menus": {
			"commandPalette": [
				{
					"command": "extension.mock-debug.debugEditorContents",
					"when": "resourceLangId == markdown"
				},
				{
					"command": "extension.mock-debug.runEditorContents",
					"when": "resourceLangId == markdown"
				}
			],
			"debug/variables/context": [
				{
					"command": "extension.mock-debug.toggleFormatting",
					"when": "debugType == 'mock' && debugProtocolVariableMenuContext == 'simple'"
				}
			],
			"editor/title/run": [
				{
					"command": "extension.mock-debug.runEditorContents",
					"group": "navigation@1",
					"when": "resourceLangId == markdown"
				},
				{
					"command": "extension.mock-debug.debugEditorContents",
					"group": "navigation@2",
					"when": "resourceLangId == markdown"
				}
			]
		}
	},
	"dependencies": {},
	"description": "Starter extension for developing debug adapters for VS Code.",
	"devDependencies": {
		"@types/glob": "8.1.0",
		"@types/node": "22.10.1",
		"await-notify": "1.0.1",
		"base64-js": "1.5.1",
		"esbuild": "0.24.0",
		"events": "3.3.0",
		"glob": "11.0.0",
		"path-browserify": "1.0.1",
		"rimraf": "6.0.1",
		"url": "0.11.4"
	},
	"displayName": "Mock Debug",
	"icon": "images/mock-debug-icon.png",
	"main": "./dist/extension.js",
	"name": "mock-debug",
	"scripts": {
		"build": "npm run -S esbuild-base -- --sourcemap --sources-content=false && npm run -S esbuild-web -- --sourcemap --sources-content=false",
		"compile": "tsc -p ./",
		"esbuild-base": "esbuild ./src/extension.ts --bundle --tsconfig=./tsconfig.json --external:vscode --format=cjs --platform=node --outfile=dist/extension.js",
		"esbuild-web": "esbuild ./src/web-extension.ts --bundle --tsconfig=./tsconfig.json --external:vscode --format=cjs --platform=browser --outfile=dist/web-extension.js",
		"publish": "vsce publish",
		"publish-pre-release": "vsce publish --pre-release",
		"watch-web": "npm run -S esbuild-web -- --sourcemap --sources-content=false --watch"
	},
	"workspaceTrust": {
		"request": "never"
	}
}
